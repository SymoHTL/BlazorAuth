@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityRedirectManager RedirectManager

@if (_externalLogins.Length == 0) {
    <div>
        <MudText>
            There are no external authentication services configured. See this
            <MudLink Href="https://go.microsoft.com/fwlink/?LinkID=532715">
                article
                about setting up this ASP.NET application to support logging in via external services
            </MudLink>.
        </MudText>
    </div>
}
else {
    <form class="form-horizontal" action="account/performExternalLogin" method="post">
        <div>
            <AntiforgeryToken/>
            <input type="hidden" name="ReturnUrl" value="@ReturnUrl"/>
            <MudText>
                @foreach (var provider in _externalLogins) {
                    <MudStaticButton ButtonType="ButtonType.Submit" Color="Color.Primary" name="provider" value="@provider.Name"
                               title=@($"Log in using your {provider.DisplayName} account")>@provider.DisplayName</MudStaticButton>
                }
            </MudText>
        </div>
    </form>
}

@code {
    private AuthenticationScheme[] _externalLogins = [];

    [SupplyParameterFromQuery] private string? ReturnUrl{ get; set; }

    protected override async Task OnInitializedAsync() {
        _externalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToArray();
    }

}