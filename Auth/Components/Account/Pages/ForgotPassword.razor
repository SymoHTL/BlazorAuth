@page "/account/forgotPassword"
@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Forgot your password?</PageTitle>

<MudText Typo="Typo.h4">Forgot your password?</MudText>
<MudText Typo="Typo.h6">Enter your email.</MudText>
<MudDivider/>
<div class="row">
    <div class="col-md-4">
        <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator/>
            <ValidationSummary class="text-danger" role="alert"/>

            <div class="form-floating mb-3">
                <MudStaticTextField @bind-Value="Input.Email" autocomplete="email" aria-required="true"
                                    InputMode="InputMode.email" InputType="InputType.Email" Label="Email address"
                                    Required="true" Placeholder="name@example.com" For="() => Input.Email"/>
            </div>
            <MudStaticButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">Reset password</MudStaticButton>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm] private InputModel Input{ get; set; } = new();

    private async Task OnValidSubmitAsync() {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user))) {
            // Don't reveal that the user does not exist or is not confirmed
            RedirectManager.RedirectTo("account/forgotPasswordConfirmation");
        }

        // For more information on how to enable account confirmation and password reset please
        // visit https://go.microsoft.com/fwlink/?LinkID=532713
        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("account/resetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("account/forgotPasswordConfirmation");
    }

    private sealed class InputModel {
        [Required] [EmailAddress] public string Email{ get; set; } = "";
    }

}