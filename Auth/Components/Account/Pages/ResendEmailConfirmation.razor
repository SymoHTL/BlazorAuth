@page "/account/resendEmailConfirmation"

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager

<PageTitle>Resend email confirmation</PageTitle>

<MudText Typo="Typo.h2">Resend email confirmation</MudText>
<MudText Typo="Typo.h3">Enter your email.</MudText>
<MudDivider/>
<StatusMessage Message="@_message"/>
<div class="row">
    <div class="col-md-4">
        <EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator/>
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="form-floating mb-3">
                <MudStaticTextField @bind-Value="Input.Email" autocomplete="email" aria-required="true"
                                    InputMode="InputMode.email" InputType="InputType.Email" Label="Email address"
                                    Required="true" Placeholder="name@example.com" For="() => Input.Email"/>
            </div>
            <MudStaticButton Variant="Variant.Filled" FullWidth="true" Color="Color.Info">Resend</MudStaticButton>
        </EditForm>
    </div>
</div>

@code {
    private string? _message;

    [SupplyParameterFromForm] private InputModel Input{ get; set; } = new();

    private async Task OnValidSubmitAsync() {
        var user = await UserManager.FindByEmailAsync(Input.Email!);
        if (user is null) {
            _message = "Verification email sent. Please check your email.";
            return;
        }

        var userId = await UserManager.GetUserIdAsync(user);
        var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
            new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code });
        await EmailSender.SendConfirmationLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        _message = "Verification email sent. Please check your email.";
    }

    private sealed class InputModel {
        [Required] [EmailAddress] public string Email{ get; set; } = "";
    }

}